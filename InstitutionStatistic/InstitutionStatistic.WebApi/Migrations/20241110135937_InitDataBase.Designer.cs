// <auto-generated />
using System;
using InstitutionStatistic.WebApi.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InstitutionStatistic.WebApi.Migrations
{
    [DbContext(typeof(InstitutionDbContext))]
    [Migration("20241110135937_InitDataBase")]
    partial class InitDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Version")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("department");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("InstitutionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Version")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("faculty");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<Guid?>("SpecialityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Version")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("group");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int?>("BuildingOwnership")
                        .HasColumnType("integer")
                        .HasColumnName("building_ownership");

                    b.Property<int?>("InstitutionOwnership")
                        .HasColumnType("integer")
                        .HasColumnName("institution_ownership");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid?>("RectorId")
                        .HasColumnType("uuid");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("registration_number");

                    b.Property<DateTime>("Version")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("RectorId");

                    b.ToTable("institution");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Rector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("Degree")
                        .HasColumnType("integer")
                        .HasColumnName("degree");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer")
                        .HasColumnName("rank");

                    b.Property<DateTime>("Version")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.ToTable("rector");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Speciality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Version")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.ToTable("speciality");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Department", b =>
                {
                    b.HasOne("InstitutionStatistic.Domain.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Faculty", b =>
                {
                    b.HasOne("InstitutionStatistic.Domain.Models.Institution", "Institution")
                        .WithMany("Faculties")
                        .HasForeignKey("InstitutionId");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Group", b =>
                {
                    b.HasOne("InstitutionStatistic.Domain.Models.Department", "Department")
                        .WithMany("Groups")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("InstitutionStatistic.Domain.Models.Speciality", "Speciality")
                        .WithMany("Groups")
                        .HasForeignKey("SpecialityId");

                    b.Navigation("Department");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Institution", b =>
                {
                    b.HasOne("InstitutionStatistic.Domain.Models.Rector", "Rector")
                        .WithMany()
                        .HasForeignKey("RectorId");

                    b.Navigation("Rector");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Department", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Faculty", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Institution", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("InstitutionStatistic.Domain.Models.Speciality", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
